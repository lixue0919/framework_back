<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syfri.userservice.dao.venue.ZwsmsDAO">
	<!--1.查询条件-->
	<sql id="SQL_CONDITION">
		<if test="uuid != null and uuid != '' ">
		 and t.uuid = #{uuid}
		</if>
		<if test="cjrid != null and cjrid != '' ">
		 and t.cjrid = #{cjrid}
		</if>
		<if test="cjrmc != null and cjrmc != '' ">
		 and t.cjrmc = #{cjrmc}
		</if>
		<if test="cjsj != null and cjsj != '' ">
		 and t.cjsj = #{cjsj}
		</if>
		<if test="xgrid != null and xgrid != '' ">
		 and t.xgrid = #{xgrid}
		</if>
		<if test="xgrmc != null and xgrmc != '' ">
		 and t.xgrmc = #{xgrmc}
		</if>
		<if test="xgsj != null and xgsj != '' ">
		 and t.xgsj = #{xgsj}
		</if>
		<if test="reserve1 != null and reserve1 != '' ">
		 and t.reserve1 = #{reserve1}
		</if>
		<if test="reserve2 != null and reserve2 != '' ">
		 and t.reserve2 = #{reserve2}
		</if>
		<if test="reserve3 != null and reserve3 != '' ">
		 and t.reserve3 = #{reserve3}
		</if>
		<if test="reserve4 != null and reserve4 != '' ">
		 and t.reserve4 = #{reserve4}
		</if>
		<if test="zt != null and zt != '' ">
		 and t.zt = #{zt}
		</if>
		<if test="errmsg != null and errmsg != '' ">
		 and t.errmsg = #{errmsg}
		</if>
		<if test="ext != null and ext != '' ">
		 and t.ext = #{ext}
		</if>
		<if test="sid != null and sid != '' ">
		 and t.sid = #{sid}
		</if>
		<if test="fee != null and fee != '' ">
		 and t.fee = #{fee}
		</if>
		<if test="result != null and result != '' ">
		 and t.result = #{result}
		</if>
		<if test="fssj != null and fssj != '' ">
		 and t.fssj = #{fssj}
		</if>
		<if test="fscs != null and fscs != '' ">
		 and t.fscs = #{fscs}
		</if>
		<if test="sjhm != null and sjhm != '' ">
		 and t.sjhm LIKE concat(concat('%',#{sjhm}),'%') ESCAPE '\'
		</if>
		<if test="qyid != null and qyid != '' ">
		 and t.qyid = #{qyid}
		</if>
		<if test="zwh != null and zwh != '' ">
		 and t.zwh LIKE concat(concat('%',#{zwh}),'%') ESCAPE '\'
		</if>
		<if test="zwuuid != null and zwuuid != '' ">
		 and t.zwuuid = #{zwuuid}
		</if>
		<if test="deleteFlag != null and deleteFlag != '' ">
		 and t.delete_flag = #{deleteFlag}
		</if>
	</sql>

	<!--2.查询内容-->
	<sql id="SQL_CONTENT">
		t.uuid uuid,
		t.cjrid cjrid,
		t.cjrmc cjrmc,
		TO_CHAR(t.cjsj,'yyyy-MM-dd HH24:mi:ss') cjsj,
		t.xgrid xgrid,
		t.xgrmc xgrmc,
		TO_CHAR(t.xgsj,'yyyy-MM-dd HH24:mi:ss') xgsj,
		t.reserve1 reserve1,
		t.reserve2 reserve2,
		t.reserve3 reserve3,
		TO_CHAR(t.reserve4,'yyyy-MM-dd HH24:mi:ss') reserve4,
		t.zt zt,
		t.errmsg errmsg,
		t.ext ext,
		t.sid sid,
		t.fee fee,
		t.result result,
		TO_CHAR(t.fssj,'yyyy-MM-dd HH24:mi:ss') fssj,
		t.fscs fscs,
		t.sjhm sjhm,
		t.qyid qyid,
		t.zwh zwh,
		t.zwuuid zwuuid,
		t.delete_flag deleteFlag
	</sql>

	<!--3.查询记录数-->
	<select id="doSearchCount" parameterType="ZwsmsVO" resultType="java.lang.Integer">
		SELECT COUNT(0) AS NUM FROM CFPA_ZW_SMS t WHERE 1=1 AND DELETE_FLAG = 'N'
		<include refid="SQL_CONDITION"/>
	</select>

	<!--4.按条件查询记录-->
	<select id="doSearchListByVO" parameterType="ZwsmsVO"  resultType="ZwsmsVO">
		SELECT
			<include refid="SQL_CONTENT"/>,
		DECODE(t1.usertype,'ENG',t1.ywgsmc,t1.zwgsmc) qymc,
		TO_CHAR(t.fssj,'yyyy-MM-dd HH24:mi:ss') fssjStr
		FROM CFPA_ZW_SMS t
		left join (select a.qyid, a.zwgsmc, a.ywgsmc, s.usertype from CFPA_QY_JBXX a
		Left Join SYS_ACCOUNT s on s.userid = a.userid AND s.DELETE_FLAG = 'N') t1
		on t1.qyid = t.qyid
		WHERE t.DELETE_FLAG = 'N'
		<if test="qymc != null and qymc != '' ">
			and DECODE(t1.usertype, 'ENG', t1.ywgsmc, t1.zwgsmc) LIKE concat(concat('%',#{qymc}),'%') ESCAPE '\'
		</if>
			<include refid="SQL_CONDITION"/>
		order by t.fssj DESC
	</select>

	<!--5.根据ID查询记录-->
	<select id="doFindById" parameterType="ZwsmsVO"  resultType="ZwsmsVO">
		SELECT
		<include refid="SQL_CONTENT"/>
		FROM CFPA_ZW_SMS t
		WHERE t.DELETE_FLAG = 'N' AND  t.uuid = #{value}
	</select>

	<!--6.按照VO插入-->
	<insert  id="doInsertByVO"  parameterType="ZwsmsVO">
		<selectKey resultType="String" order="BEFORE" keyProperty="uuid">
			SELECT SYS_GUID() AS uuid FROM DUAL
		</selectKey>
		INSERT INTO CFPA_ZW_SMS(uuid,cjrid,cjrmc,cjsj,xgrid,xgrmc,xgsj,reserve1,reserve2,reserve3,reserve4,zt,errmsg,ext,sid,fee,result,fssj,fscs,sjhm,qyid,zwh,zwuuid,delete_flag)
		VALUES(#{uuid,jdbcType=VARCHAR},#{cjrid,jdbcType=VARCHAR},#{cjrmc,jdbcType=VARCHAR},SYSDATE,#{xgrid,jdbcType=VARCHAR},#{xgrmc,jdbcType=VARCHAR},#{xgsj,jdbcType=TIMESTAMP},#{reserve1,jdbcType=VARCHAR},#{reserve2,jdbcType=VARCHAR},#{reserve3,jdbcType=VARCHAR},#{reserve4,jdbcType=TIMESTAMP},#{zt,jdbcType=VARCHAR},#{errmsg,jdbcType=VARCHAR},#{ext,jdbcType=VARCHAR},#{sid,jdbcType=VARCHAR},#{fee,jdbcType=VARCHAR},#{result,jdbcType=VARCHAR},#{fssj,jdbcType=TIMESTAMP},#{fscs,jdbcType=VARCHAR},#{sjhm,jdbcType=VARCHAR},#{qyid,jdbcType=VARCHAR},#{zwh,jdbcType=VARCHAR},#{zwuuid,jdbcType=VARCHAR},'N')
	 </insert>

	<!--7.批量插入-->
	<insert  id="doBatchInsertByList"  parameterType="java.util.List">
		INSERT INTO CFPA_ZW_SMS(uuid,cjrid,cjrmc,cjsj,xgrid,xgrmc,xgsj,reserve1,reserve2,reserve3,reserve4,zt,errmsg,ext,sid,fee,result,fssj,fscs,sjhm,qyid,zwh,zwuuid,delete_flag)
		SELECT SYS_GUID() uuid, A.*
		FROM (
		<foreach collection="list" item="item" index="index" separator="UNION ALL" >
		SELECT
			#{item.uuid,jdbcType=VARCHAR} uuid,#{item.cjrid,jdbcType=VARCHAR} cjrid,#{item.cjrmc,jdbcType=VARCHAR} cjrmc,#{item.cjsj,jdbcType=DATE} cjsj,#{item.xgrid,jdbcType=VARCHAR} xgrid,#{item.xgrmc,jdbcType=VARCHAR} xgrmc,#{item.xgsj,jdbcType=DATE} xgsj,#{item.reserve1,jdbcType=VARCHAR} reserve1,#{item.reserve2,jdbcType=VARCHAR} reserve2,#{item.reserve3,jdbcType=VARCHAR} reserve3,#{item.reserve4,jdbcType=DATE} reserve4,#{item.zt,jdbcType=VARCHAR} zt,#{item.errmsg,jdbcType=VARCHAR} errmsg,#{item.ext,jdbcType=VARCHAR} ext,#{item.sid,jdbcType=VARCHAR} sid,#{item.fee,jdbcType=VARCHAR} fee,#{item.result,jdbcType=VARCHAR} result,#{item.fssj,jdbcType=DATE} fssj,#{item.fscs,jdbcType=VARCHAR} fscs,#{item.sjhm,jdbcType=VARCHAR} sjhm,#{item.qyid,jdbcType=VARCHAR} qyid,#{item.zwh,jdbcType=VARCHAR} zwh,#{item.zwuuid,jdbcType=VARCHAR} zwuuid,'N' delete_flag
		FROM DUAL
		</foreach>
		) A
	</insert>

	<!--8.按主键逻辑删除-->
	<update id="doDeleteById"  parameterType="String">
		UPDATE  CFPA_ZW_SMS t SET t.DELETE_FLAG = 'Y'  WHERE 1=1   AND t.uuid = #{value}
	</update>

	<!--9.按复合条件逻辑更新-->
	<update  id="doUpdateByVO"  parameterType="ZwsmsVO">
		UPDATE   CFPA_ZW_SMS
		<set>
			<if test="uuid != null">uuid=#{uuid},</if>
			<if test="cjrid != null">cjrid=#{cjrid},</if>
			<if test="cjrmc != null">cjrmc=#{cjrmc},</if>
			<if test="cjsj != null">cjsj=TO_DATE(#{cjsj},'yyyy-MM-dd HH24:mi:ss'),</if>
			<if test="xgrid != null">xgrid=#{xgrid},</if>
			<if test="xgrmc != null">xgrmc=#{xgrmc},</if>
			<if test="xgsj != null">xgsj=TO_DATE(#{xgsj},'yyyy-MM-dd HH24:mi:ss'),</if>
			<if test="xgsj != null">SYSDATE,</if>
			<if test="reserve1 != null">reserve1=#{reserve1},</if>
			<if test="reserve2 != null">reserve2=#{reserve2},</if>
			<if test="reserve3 != null">reserve3=#{reserve3},</if>
			<if test="reserve4 != null">reserve4=TO_DATE(#{reserve4},'yyyy-MM-dd HH24:mi:ss'),</if>
			<if test="zt != null">zt=#{zt},</if>
			<if test="errmsg != null">errmsg=#{errmsg},</if>
			<if test="ext != null">ext=#{ext},</if>
			<if test="sid != null">sid=#{sid},</if>
			<if test="fee != null">fee=#{fee},</if>
			<if test="result != null">result=#{result},</if>
			<if test="fssj != null">fssj=TO_DATE(#{fssj},'yyyy-MM-dd HH24:mi:ss'),</if>
			<if test="fscs != null">fscs=#{fscs},</if>
			<if test="sjhm != null">sjhm=#{sjhm},</if>
			<if test="qyid != null">qyid=#{qyid},</if>
			<if test="zwh != null">zwh=#{zwh},</if>
			<if test="zwuuid != null">zwuuid=#{zwuuid},</if>
			<if test="deleteFlag != null">delete_flag='N'</if>
		</set>
		WHERE  uuid = #{uuid}
	</update>

	<!--10.批量修改-->
	<update id="doBatchUpdateByList"  parameterType="java.util.List">
		INSERT INTO CFPA_ZW_SMS(uuid,cjrid,cjrmc,cjsj,xgrid,xgrmc,xgsj,reserve1,reserve2,reserve3,reserve4,zt,errmsg,ext,sid,fee,result,fssj,fscs,sjhm,qyid,zwh,zwuuid,delete_flag)
		VALUES
		<foreach collection="list" item="item" index="index" separator="," >
			#{item.uuid,jdbcType=VARCHAR} uuid,#{item.cjrid,jdbcType=VARCHAR} cjrid,#{item.cjrmc,jdbcType=VARCHAR} cjrmc,#{item.cjsj,jdbcType=DATE} cjsj,#{item.xgrid,jdbcType=VARCHAR} xgrid,#{item.xgrmc,jdbcType=VARCHAR} xgrmc,#{item.xgsj,jdbcType=DATE} xgsj,#{item.reserve1,jdbcType=VARCHAR} reserve1,#{item.reserve2,jdbcType=VARCHAR} reserve2,#{item.reserve3,jdbcType=VARCHAR} reserve3,#{item.reserve4,jdbcType=DATE} reserve4,#{item.zt,jdbcType=VARCHAR} zt,#{item.errmsg,jdbcType=VARCHAR} errmsg,#{item.ext,jdbcType=VARCHAR} ext,#{item.sid,jdbcType=VARCHAR} sid,#{item.fee,jdbcType=VARCHAR} fee,#{item.result,jdbcType=VARCHAR} result,#{item.fssj,jdbcType=DATE} fssj,#{item.fscs,jdbcType=VARCHAR} fscs,#{item.sjhm,jdbcType=VARCHAR} sjhm,#{item.qyid,jdbcType=VARCHAR} qyid,#{item.zwh,jdbcType=VARCHAR} zwh,#{item.zwuuid,jdbcType=VARCHAR} zwuuid,'N' delete_flag
		</foreach>
		ON DUPLICATE KEY UPDATE
			uuid = VALUES(uuid),
			cjrid = VALUES(cjrid),
			cjrmc = VALUES(cjrmc),
			cjsj = VALUES(cjsj),
			xgrid = VALUES(xgrid),
			xgrmc = VALUES(xgrmc),
			xgsj = VALUES(xgsj),
			reserve1 = VALUES(reserve1),
			reserve2 = VALUES(reserve2),
			reserve3 = VALUES(reserve3),
			reserve4 = VALUES(reserve4),
			zt = VALUES(zt),
			errmsg = VALUES(errmsg),
			ext = VALUES(ext),
			sid = VALUES(sid),
			fee = VALUES(fee),
			result = VALUES(result),
			fssj = VALUES(fssj),
			fscs = VALUES(fscs),
			sjhm = VALUES(sjhm),
			qyid = VALUES(qyid),
			zwh = VALUES(zwh),
			zwuuid = VALUES(zwuuid),
			delete_flag = VALUES(delete_flag)
	</update>

	<!--11.根据对象查询记录-->
	<select id="doFindByVO" parameterType="ZwsmsVO"  resultType="ZwsmsVO">
		SELECT
		<include refid="SQL_CONTENT"/>
		FROM CFPA_ZW_SMS t
		WHERE t.DELETE_FLAG = 'N'
		<include refid="SQL_CONDITION"/>
	</select>

	<!--按日志时间清空日志-->
	<update  id="doDeleteByFssj"  parameterType="ZwsmsVO">
		UPDATE   CFPA_ZW_SMS
		<set>
			delete_flag='Y',
			xgsj=SYSDATE,
			<if test="xgrid != null">xgrid=#{xgrid},</if>
			<if test="xgrmc != null">xgrmc=#{xgrmc}</if>
		</set>
		WHERE fssj &gt; to_date(#{fssj_begin},'yyyy/mm/dd HH24:Mi:SS')
		and fssj &lt; to_date(#{fssj_end},'yyyy/mm/dd HH24:Mi:SS')
	</update>

</mapper>
